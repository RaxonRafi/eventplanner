generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String?
  image     String?
  role      Role      @default(USER)
  events    Event[]   @relation("OrganizerEvents")
  rsvps     RSVP[]
  createdAt DateTime  @default(now())
}

model Event {
  id          String         @id @default(cuid())
  title       String
  description String?
  date        DateTime
  location    String
  capacity    Int?
  organizer   User           @relation("OrganizerEvents", fields: [organizerId], references: [id])
  organizerId String
  packages    EventPackage[]
  rsvps       RSVP[]
  createdAt   DateTime       @default(now())
}

model EventPackage {
  id        String   @id @default(cuid())
  name      String
  price     Float
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  createdAt DateTime @default(now())
  rsvps     RSVP[]   @relation("PackageRSVPs")
}

model RSVP {
  id        String        @id @default(cuid())
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  event     Event         @relation(fields: [eventId], references: [id])
  eventId   String
  package   EventPackage? @relation("PackageRSVPs", fields: [packageId], references: [id])
  packageId String?
  status    RSVPStatus    @default(PENDING)
  paid      Boolean       @default(false)
  @@unique([userId, eventId])         
  @@index([eventId, status]) 
  createdAt DateTime      @default(now())
  Payment Payment[]
}
model Payment {
  id           String         @id @default(cuid())
  rsvp         RSVP           @relation(fields: [rsvpId], references: [id], onDelete: Cascade)
  rsvpId       String
  amount       Int  
  currency     String        
  status       PaymentStatus  @default(UNPAID)
  tranId       String?        @unique
  paymentGatewayData String?     
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@index([rsvpId, status])
  @@index([tranId])
}

enum PaymentStatus {
  UNPAID
  PAID
  FAILED
  CANCELLED
  REFUNDED
}

enum Role {
  USER
  ADMIN
  ORGANIZER
}

enum RSVPStatus {
  PENDING
  CONFIRMED
  CANCELLED
}